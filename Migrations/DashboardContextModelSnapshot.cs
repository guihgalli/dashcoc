// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using coc_solucoes_dash.Models;

#nullable disable

namespace Dashboard.Migrations
{
    [DbContext(typeof(DashboardContext))]
    partial class DashboardContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("coc_solucoes_dash.Models.Ambiente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ambientes");
                });

            modelBuilder.Entity("coc_solucoes_dash.Models.Criticidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Downtime")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Peso")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Criticidades");
                });

            modelBuilder.Entity("coc_solucoes_dash.Models.Incidente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AcoesTomadas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AmbienteId")
                        .HasColumnType("integer");

                    b.Property<int>("CriticidadeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataHoraFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("DuracaoMinutos")
                        .HasColumnType("integer");

                    b.Property<int>("SegmentoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoIncidenteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.HasIndex("CriticidadeId");

                    b.HasIndex("SegmentoId");

                    b.HasIndex("TipoIncidenteId");

                    b.ToTable("Incidentes");
                });

            modelBuilder.Entity("coc_solucoes_dash.Models.Meta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AmbienteId")
                        .HasColumnType("integer");

                    b.Property<double>("DisponibilidadeMeta")
                        .HasColumnType("double precision");

                    b.Property<double>("MTBFMetaDias")
                        .HasColumnType("double precision");

                    b.Property<double>("MTBFMetaHoras")
                        .HasColumnType("double precision");

                    b.Property<double>("MTTRMetaHoras")
                        .HasColumnType("double precision");

                    b.Property<int>("Peso")
                        .HasColumnType("integer");

                    b.Property<int>("SegmentoId")
                        .HasColumnType("integer");

                    b.Property<bool>("SuperacaoMTBF")
                        .HasColumnType("boolean");

                    b.Property<bool>("SuperacaoMTTR")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.HasIndex("SegmentoId");

                    b.ToTable("Metas");
                });

            modelBuilder.Entity("coc_solucoes_dash.Models.Segmento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AmbienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.ToTable("Segmentos");
                });

            modelBuilder.Entity("coc_solucoes_dash.Models.TipoIncidente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TiposIncidente");
                });

            modelBuilder.Entity("coc_solucoes_dash.Models.Incidente", b =>
                {
                    b.HasOne("coc_solucoes_dash.Models.Ambiente", "Ambiente")
                        .WithMany("Incidentes")
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("coc_solucoes_dash.Models.Criticidade", "Criticidade")
                        .WithMany("Incidentes")
                        .HasForeignKey("CriticidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("coc_solucoes_dash.Models.Segmento", "Segmento")
                        .WithMany("Incidentes")
                        .HasForeignKey("SegmentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("coc_solucoes_dash.Models.TipoIncidente", "TipoIncidente")
                        .WithMany("Incidentes")
                        .HasForeignKey("TipoIncidenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");

                    b.Navigation("Criticidade");

                    b.Navigation("Segmento");

                    b.Navigation("TipoIncidente");
                });

            modelBuilder.Entity("coc_solucoes_dash.Models.Meta", b =>
                {
                    b.HasOne("coc_solucoes_dash.Models.Ambiente", "Ambiente")
                        .WithMany("Metas")
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("coc_solucoes_dash.Models.Segmento", "Segmento")
                        .WithMany("Metas")
                        .HasForeignKey("SegmentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");

                    b.Navigation("Segmento");
                });

            modelBuilder.Entity("coc_solucoes_dash.Models.Segmento", b =>
                {
                    b.HasOne("coc_solucoes_dash.Models.Ambiente", "Ambiente")
                        .WithMany("Segmentos")
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");
                });

            modelBuilder.Entity("coc_solucoes_dash.Models.Ambiente", b =>
                {
                    b.Navigation("Incidentes");

                    b.Navigation("Metas");

                    b.Navigation("Segmentos");
                });

            modelBuilder.Entity("coc_solucoes_dash.Models.Criticidade", b =>
                {
                    b.Navigation("Incidentes");
                });

            modelBuilder.Entity("coc_solucoes_dash.Models.Segmento", b =>
                {
                    b.Navigation("Incidentes");

                    b.Navigation("Metas");
                });

            modelBuilder.Entity("coc_solucoes_dash.Models.TipoIncidente", b =>
                {
                    b.Navigation("Incidentes");
                });
#pragma warning restore 612, 618
        }
    }
}
