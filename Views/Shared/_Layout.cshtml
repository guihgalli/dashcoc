<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - @(ViewBag.CabecalhoSistema ?? "DorowCamp")</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/messages.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Gerente.styles.css" asp-append-version="true" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
</head>
<body>
    <div class="d-flex">
        <!-- Sidebar -->
        <nav class="sidebar bg-dark text-white" id="sidebar">
            <div class="sidebar-header p-3 border-bottom border-secondary">
                <h4 class="mb-0">
                    <i class="bi bi-gear-fill me-2"></i>
                    @(ViewBag.CabecalhoSistema ?? "DorowCamp")
                </h4>
            </div>
            
            <div class="sidebar-content p-3">
                <ul class="nav flex-column">
                    <li class="nav-item mb-2">
                        <a class="nav-link text-white-50 sidebar-link" href="@Url.Action("Index", "Home")" data-bs-toggle="tooltip" title="Dashboard">
                            <i class="bi bi-speedometer2 me-2"></i>
                            <span class="sidebar-text">Dashboard</span>
                        </a>
                    </li>
                    <li class="nav-item mb-2">
                        <a class="nav-link text-white-50 sidebar-link" href="@Url.Action("Index", "Projetos")" data-bs-toggle="tooltip" title="Projetos">
                            <i class="bi bi-folder-fill me-2"></i>
                            <span class="sidebar-text">Projetos</span>
                        </a>
                    </li>
                    @if (Context.Session.GetInt32("UserId").HasValue)
                    {
                        var accessControlService = Context.RequestServices.GetService<Gerente.Services.AccessControlService>();
                        var userId = Context.Session.GetInt32("UserId").GetValueOrDefault();
                        
                        @if (accessControlService?.HasAccessToBacklogArquitetura(userId) == true)
                        {
                            <li class="nav-item mb-2">
                                <a class="nav-link text-white-50 sidebar-link" href="@Url.Action("Index", "BacklogArquitetura")" data-bs-toggle="tooltip" title="Backlog Projetos">
                                    <i class="bi bi-kanban me-2"></i>
                                    <span class="sidebar-text">Backlog Projetos</span>
                                </a>
                            </li>
                        }
                    }
                    @if (Context.Session.GetInt32("UserId").HasValue)
                    {
                        var accessControlService = Context.RequestServices.GetService<Gerente.Services.AccessControlService>();
                        var userId = Context.Session.GetInt32("UserId").GetValueOrDefault();
                        
                        @if (accessControlService?.HasAccessToUsers(userId.ToString()) == true)
                        {
                            <li class="nav-item mb-2">
                                <a class="nav-link text-white-50 sidebar-link" href="@Url.Action("Index", "Usuario")" data-bs-toggle="tooltip" title="Usuários">
                                    <i class="bi bi-people-fill me-2"></i>
                                    <span class="sidebar-text">Usuários</span>
                                </a>
                            </li>
                        }
                    }
                    <li class="nav-item mb-2">
                        <a class="nav-link text-white-50 sidebar-link" href="@Url.Action("Index", "Relatorios")" data-bs-toggle="tooltip" title="Relatórios">
                            <i class="bi bi-graph-up me-2"></i>
                            <span class="sidebar-text">Relatórios</span>
                        </a>
                    </li>
                    @if (Context.Session.GetInt32("UserId").HasValue)
                    {
                        var accessControlService = Context.RequestServices.GetService<Gerente.Services.AccessControlService>();
                        var userId = Context.Session.GetInt32("UserId").GetValueOrDefault();
                        
                        @if (accessControlService?.HasAccessToConfigurations(userId) == true)
                        {
                            <li class="nav-item mb-2">
                                <div class="dropdown">
                                    <a class="nav-link text-white-50 sidebar-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="bi bi-gear-fill me-2"></i>
                                        <span class="sidebar-text">Configurações</span>
                                    </a>
                                    <ul class="dropdown-menu dropdown-menu-dark">
                                        @if (accessControlService?.HasAccessToUsers(userId) == true)
                                        {
                                            <li>
                                                <a class="dropdown-item" href="@Url.Action("Index", "Usuario")">
                                                    <i class="bi bi-people-fill me-2"></i>
                                                    Cadastro de Usuários
                                                </a>
                                            </li>
                                        }
                                        <li>
                                            <a class="dropdown-item" href="@Url.Action("Index", "PerfilAcesso")">
                                                <i class="bi bi-shield-lock me-2"></i>
                                                Perfis de Acesso
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item" href="@Url.Action("Index", "ConfiguracaoEmail")">
                                                <i class="bi bi-envelope-fill me-2"></i>
                                                E-mail
                                            </a>
                                        </li>
                                        @if (accessControlService?.HasAccessToSystemParameters(userId) == true)
                                        {
                                            <li>
                                                <a class="dropdown-item" href="@Url.Action("Index", "ParametroSistema")">
                                                    <i class="bi bi-gear-wide-connected me-2"></i>
                                                    Parâmetro do Sistema
                                                </a>
                                            </li>
                                            <li>
                                                <a class="dropdown-item" href="@Url.Action("Index", "ParametroGanho")">
                                                    <i class="bi bi-trophy me-2"></i>
                                                    Parâmetros de Ganhos
                                                </a>
                                            </li>
                                            <li>
                                                <a class="dropdown-item" href="@Url.Action("Index", "ParametroAmbiente")">
                                                    <i class="bi bi-server me-2"></i>
                                                    Parâmetros de Ambientes
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </li>
                        }
                    }
                </ul>
            </div>
            
            <!-- Botão Sair na parte inferior da sidebar -->
            <div class="sidebar-footer p-3 border-top border-secondary mt-auto">
                <a class="nav-link text-danger sidebar-link" href="#" 
                   data-bs-toggle="modal" data-bs-target="#logoutModal" 
                   id="logoutSidebarBtn">
                    <i class="bi bi-box-arrow-right me-2"></i>
                    <span class="sidebar-text">Sair</span>
                </a>
            </div>
        </nav>
        
        <!-- Conteúdo principal -->
        <div class="main-content" id="main-content">
            <!-- Botão toggle para mobile -->
            <button class="btn btn-dark d-md-none sidebar-toggle" type="button" id="sidebarToggle">
                <i class="bi bi-list"></i>
            </button>
            
            <!-- Sistema de Mensagens -->
            @await Html.PartialAsync("_Messages")
            
            <div class="content-wrapper">
                <main role="main" class="pb-3">
                    @RenderBody()
                </main>
            </div>
            
            <!-- Footer centralizado na parte inferior -->
            <footer class="footer text-muted">
                <div class="container-fluid">
                    <div class="row justify-content-center align-items-center">
                        <div class="col-auto">
                            <span class="footer-text me-3">
                                @(ViewBag.NomeRodape ?? "Sistema DorowCamp 2025©")
                            </span>
                            <small class="version-text">
                                Versão @(ViewBag.VersaoSistema ?? "1.0.0")
                            </small>
                        </div>
                    </div>
                </div>
            </footer>
        </div>
    </div>
    
    <!-- Modal de confirmação de logout -->
    <div class="modal fade" id="logoutModal" tabindex="-1" aria-labelledby="logoutModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header border-0">
            <h5 class="modal-title" id="logoutModalLabel">
              <i class="bi bi-box-arrow-right me-2 text-danger"></i>
              Sair do sistema
            </h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
          </div>
          <div class="modal-body text-center">
            <p class="mb-0" style="font-size:1.1em;">Tem certeza que deseja sair?</p>
          </div>
          <div class="modal-footer border-0 justify-content-center gap-2">
            <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
            <a id="logoutConfirmBtn" href="@Url.Action("Logout", "Home")" class="btn btn-danger px-4">Sair</a>
          </div>
        </div>
      </div>
    </div>
    
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        // Inicializar tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });
        
        // Toggle sidebar no mobile
        document.getElementById('sidebarToggle').addEventListener('click', function() {
            document.getElementById('sidebar').classList.toggle('show');
        });
        
        // Fechar sidebar ao clicar fora (mobile)
        document.addEventListener('click', function(event) {
            const sidebar = document.getElementById('sidebar');
            const sidebarToggle = document.getElementById('sidebarToggle');
            
            if (window.innerWidth < 768 && 
                !sidebar.contains(event.target) && 
                !sidebarToggle.contains(event.target)) {
                sidebar.classList.remove('show');
            }
        });
        
        // Melhorar experiência mobile
        function handleResize() {
            const sidebar = document.getElementById('sidebar');
            const mainContent = document.getElementById('main-content');
            
            if (window.innerWidth >= 768) {
                sidebar.classList.remove('show');
                mainContent.style.marginLeft = '250px';
            } else {
                mainContent.style.marginLeft = '0';
            }
        }
        
        // Executar no carregamento e no redimensionamento
        window.addEventListener('resize', handleResize);
        handleResize();
        
        // Melhorar acessibilidade do sidebar toggle
        document.getElementById('sidebarToggle').addEventListener('keydown', function(e) {
            if (e.key === 'Enter' || e.key === ' ') {
                e.preventDefault();
                document.getElementById('sidebar').classList.toggle('show');
            }
        });
        
        // Melhorar comportamento do dropdown no sidebar
        document.addEventListener('DOMContentLoaded', function() {
            const sidebarDropdowns = document.querySelectorAll('.sidebar .dropdown-toggle');
            
            sidebarDropdowns.forEach(function(dropdownToggle) {
                dropdownToggle.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    // Fechar outros dropdowns abertos
                    const otherDropdowns = document.querySelectorAll('.sidebar .dropdown.show');
                    otherDropdowns.forEach(function(dropdown) {
                        if (dropdown !== this.closest('.dropdown')) {
                            dropdown.classList.remove('show');
                        }
                    });
                    
                    // Toggle do dropdown atual
                    const dropdown = this.closest('.dropdown');
                    dropdown.classList.toggle('show');
                });
            });
            
            // Fechar dropdowns ao clicar fora
            document.addEventListener('click', function(e) {
                if (!e.target.closest('.sidebar .dropdown')) {
                    const openDropdowns = document.querySelectorAll('.sidebar .dropdown.show');
                    openDropdowns.forEach(function(dropdown) {
                        dropdown.classList.remove('show');
                    });
                }
            });
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
